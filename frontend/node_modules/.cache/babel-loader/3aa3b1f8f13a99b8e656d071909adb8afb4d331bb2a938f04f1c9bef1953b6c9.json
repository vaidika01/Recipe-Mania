{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJECTS\\\\Recipe\\\\frontend\\\\src\\\\pages\\\\RecipePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport recipesData from \"../data\"; // Import the static dummy data\nimport axios from \"../services/axiosInstance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  padding: 20px;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n_c = PageContainer;\nconst RecipeImage = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n  border-bottom: 1px solid #ddd;\n  margin-bottom: 20px;\n  border-radius: 8px;\n`;\n_c2 = RecipeImage;\nconst RecipeTitle = styled.h1`\n  margin-bottom: 20px;\n  font-size: 2rem;\n  color: #333;\n`;\n_c3 = RecipeTitle;\nconst Ingredients = styled.div`\n  margin-bottom: 20px;\n`;\n_c4 = Ingredients;\nconst Preparation = styled.div``;\n_c5 = Preparation;\nconst IngredientsTitle = styled.h2`\n  font-size: 1.5rem;\n  color: #555;\n  margin-bottom: 10px;\n`;\n_c6 = IngredientsTitle;\nconst PreparationTitle = styled.h2`\n  font-size: 1.5rem;\n  color: #555;\n  margin-bottom: 10px;\n`;\n_c7 = PreparationTitle;\nconst RecipePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRecipe = async () => {\n      try {\n        // First, try to fetch from the database\n        const response = await axios.get(`/recipes/${id}`);\n        setRecipe(response.data);\n      } catch (error) {\n        // If not found in the database, check the dummy recipes\n        const dummyRecipe = recipesData.find(recipe => recipe.id === parseInt(id));\n        if (dummyRecipe) {\n          setRecipe(dummyRecipe);\n        } else {\n          setError(\"Recipe not found\");\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchRecipe();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Recipe not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if the image is from dummy data or a user-uploaded image\n  const imageUrl = recipe.image.startsWith(\"http\") ? recipe.image : recipe.image;\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(RecipeImage, {\n      src: imageUrl,\n      alt: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeTitle, {\n      children: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ingredients, {\n      children: [/*#__PURE__*/_jsxDEV(IngredientsTitle, {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preparation, {\n      children: [/*#__PURE__*/_jsxDEV(PreparationTitle, {\n        children: \"Preparation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.preparation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipePage, \"Mlbof7TxLnZ/ZZkojbzJzibE3gE=\", false, function () {\n  return [useParams];\n});\n_c8 = RecipePage;\nexport default RecipePage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"RecipeImage\");\n$RefreshReg$(_c3, \"RecipeTitle\");\n$RefreshReg$(_c4, \"Ingredients\");\n$RefreshReg$(_c5, \"Preparation\");\n$RefreshReg$(_c6, \"IngredientsTitle\");\n$RefreshReg$(_c7, \"PreparationTitle\");\n$RefreshReg$(_c8, \"RecipePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","styled","recipesData","axios","jsxDEV","_jsxDEV","PageContainer","div","_c","RecipeImage","img","_c2","RecipeTitle","h1","_c3","Ingredients","_c4","Preparation","_c5","IngredientsTitle","h2","_c6","PreparationTitle","_c7","RecipePage","_s","id","recipe","setRecipe","loading","setLoading","error","setError","fetchRecipe","response","get","data","dummyRecipe","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","imageUrl","image","startsWith","src","alt","name","ingredients","preparation","_c8","$RefreshReg$"],"sources":["C:/PROJECTS/Recipe/frontend/src/pages/RecipePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport recipesData from \"../data\"; // Import the static dummy data\r\nimport axios from \"../services/axiosInstance\";\r\n\r\nconst PageContainer = styled.div`\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst RecipeImage = styled.img`\r\n  width: 100%;\r\n  height: 300px;\r\n  object-fit: cover;\r\n  border-bottom: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst RecipeTitle = styled.h1`\r\n  margin-bottom: 20px;\r\n  font-size: 2rem;\r\n  color: #333;\r\n`;\r\n\r\nconst Ingredients = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Preparation = styled.div``;\r\n\r\nconst IngredientsTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  color: #555;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst PreparationTitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  color: #555;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst RecipePage = () => {\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipe = async () => {\r\n      try {\r\n        // First, try to fetch from the database\r\n        const response = await axios.get(`/recipes/${id}`);\r\n        setRecipe(response.data);\r\n      } catch (error) {\r\n        // If not found in the database, check the dummy recipes\r\n        const dummyRecipe = recipesData.find(\r\n          (recipe) => recipe.id === parseInt(id)\r\n        );\r\n        if (dummyRecipe) {\r\n          setRecipe(dummyRecipe);\r\n        } else {\r\n          setError(\"Recipe not found\");\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRecipe();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!recipe) {\r\n    return <div>Recipe not found</div>;\r\n  }\r\n\r\n  // Check if the image is from dummy data or a user-uploaded image\r\n  const imageUrl = recipe.image.startsWith(\"http\")\r\n    ? recipe.image\r\n    : recipe.image;\r\n\r\n  return (\r\n    <PageContainer>\r\n      <RecipeImage src={imageUrl} alt={recipe.name} />\r\n      <RecipeTitle>{recipe.name}</RecipeTitle>\r\n      <Ingredients>\r\n        <IngredientsTitle>Ingredients</IngredientsTitle>\r\n        <p>{recipe.ingredients}</p>\r\n      </Ingredients>\r\n      <Preparation>\r\n        <PreparationTitle>Preparation</PreparationTitle>\r\n        <p>{recipe.preparation}</p>\r\n      </Preparation>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default RecipePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,SAAS,CAAC,CAAC;AACnC,OAAOC,KAAK,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,aAAa,GAAGL,MAAM,CAACM,GAAG;AAChC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,aAAa;AAMnB,MAAMG,WAAW,GAAGR,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,WAAW;AASjB,MAAMG,WAAW,GAAGX,MAAM,CAACY,EAAE;AAC7B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,WAAW;AAMjB,MAAMG,WAAW,GAAGd,MAAM,CAACM,GAAG;AAC9B;AACA,CAAC;AAACS,GAAA,GAFID,WAAW;AAIjB,MAAME,WAAW,GAAGhB,MAAM,CAACM,GAAG,EAAE;AAACW,GAAA,GAA3BD,WAAW;AAEjB,MAAME,gBAAgB,GAAGlB,MAAM,CAACmB,EAAE;AAClC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,gBAAgB;AAMtB,MAAMG,gBAAgB,GAAGrB,MAAM,CAACmB,EAAE;AAClC;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,gBAAgB;AAMtB,MAAME,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAG1B,SAAS,CAAC,CAAC;EAC1B,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMmC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAG,CAAC,YAAYT,EAAE,EAAE,CAAC;QAClDE,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;QACd;QACA,MAAMM,WAAW,GAAGnC,WAAW,CAACoC,IAAI,CACjCX,MAAM,IAAKA,MAAM,CAACD,EAAE,KAAKa,QAAQ,CAACb,EAAE,CACvC,CAAC;QACD,IAAIW,WAAW,EAAE;UACfT,SAAS,CAACS,WAAW,CAAC;QACxB,CAAC,MAAM;UACLL,QAAQ,CAAC,kBAAkB,CAAC;QAC9B;MACF,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE;IACX,oBAAOxB,OAAA;MAAAmC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIb,KAAK,EAAE;IACT,oBAAO1B,OAAA;MAAAmC,QAAA,EAAMT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,IAAI,CAACjB,MAAM,EAAE;IACX,oBAAOtB,OAAA;MAAAmC,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpC;;EAEA;EACA,MAAMC,QAAQ,GAAGlB,MAAM,CAACmB,KAAK,CAACC,UAAU,CAAC,MAAM,CAAC,GAC5CpB,MAAM,CAACmB,KAAK,GACZnB,MAAM,CAACmB,KAAK;EAEhB,oBACEzC,OAAA,CAACC,aAAa;IAAAkC,QAAA,gBACZnC,OAAA,CAACI,WAAW;MAACuC,GAAG,EAAEH,QAAS;MAACI,GAAG,EAAEtB,MAAM,CAACuB;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDvC,OAAA,CAACO,WAAW;MAAA4B,QAAA,EAAEb,MAAM,CAACuB;IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACxCvC,OAAA,CAACU,WAAW;MAAAyB,QAAA,gBACVnC,OAAA,CAACc,gBAAgB;QAAAqB,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,eAChDvC,OAAA;QAAAmC,QAAA,EAAIb,MAAM,CAACwB;MAAW;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACdvC,OAAA,CAACY,WAAW;MAAAuB,QAAA,gBACVnC,OAAA,CAACiB,gBAAgB;QAAAkB,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,eAChDvC,OAAA;QAAAmC,QAAA,EAAIb,MAAM,CAACyB;MAAW;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB,CAAC;AAACnB,EAAA,CA7DID,UAAU;EAAA,QACCxB,SAAS;AAAA;AAAAqD,GAAA,GADpB7B,UAAU;AA+DhB,eAAeA,UAAU;AAAC,IAAAhB,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAA9C,EAAA;AAAA8C,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAjC,GAAA;AAAAiC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}